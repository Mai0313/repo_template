name: Build Executable File

on:
  push:
    tags:
      - v*

permissions: write-all

jobs:
  build_package:
    name: Build Executable File
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          submodules: 'recursive'

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: "3.10"
          pyproject-file: "pyproject.toml"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the version
        shell: pwsh
        run: |
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          $env:PYTHONUTF8 = "1"
          $VERSION = (uvx dunamai from git --bump --no-metadata --style pep440)
          uvx --from=toml-cli toml set --toml-path=pyproject.toml project.version $VERSION
          echo "Version: $VERSION"
          echo "VERSION=$VERSION" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      # - name: Setup uv
      #   uses: astral-sh/setup-uv@v5
      #   with:
      #     version: "latest"
      #     python-version: "3.10"
      #     pyproject-file: "pyproject.toml"
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Install dependencies
      #   run: |
      #     uv sync

      # - name: Packaging to Executable file
      #   run: |
      #     uv pip install pyinstaller
      #     pyinstaller -F main.py --onefile -n ${{ github.event.repository.name }}

      - name: Move and Rename
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "./dist" -ErrorAction SilentlyContinue
          Copy-Item -Path "./dist/*" -Destination "./" -Recurse -Force
          Remove-Item -Recurse -Force build, dist, .venv, .cache, .git -ErrorAction SilentlyContinue

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          path: ./*
          name: ${{ github.event.repository.name }}_${{ env.VERSION }}
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6
          overwrite: true

      - name: List files
        shell: pwsh
        run: |
          Get-ChildItem -Path .

      - name: Download Artifact
        uses: actions/download-artifact@v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: ${{ github.event.repository.name }}_${{ env.VERSION }}
          path: ${{ github.event.repository.name }}_${{ env.VERSION }}

      - name: Check Files
        shell: pwsh
        run: |
          Compress-Archive -Path "${{ github.event.repository.name }}_${{ env.VERSION }}" -DestinationPath "${{ github.event.repository.name }}_${{ env.VERSION }}.zip" -Force
          ls -Force

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ github.event.repository.name }}_${{ env.VERSION }}.zip
